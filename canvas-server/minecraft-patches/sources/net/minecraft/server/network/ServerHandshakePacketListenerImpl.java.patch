--- a/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
+++ b/net/minecraft/server/network/ServerHandshakePacketListenerImpl.java
@@ -1,5 +_,6 @@
 package net.minecraft.server.network;
 
+import io.canvasmc.canvas.Config;
 import net.minecraft.SharedConstants;
 import net.minecraft.network.Connection;
 import net.minecraft.network.DisconnectionDetails;
@@ -20,7 +_,7 @@
     static final java.util.regex.Pattern PROP_PATTERN = java.util.regex.Pattern.compile("\\w{0,16}");
     // Spigot end
     // Paper start - Connection throttle
-    private static final java.util.Map<java.net.InetAddress, Long> throttleTracker = new java.util.HashMap<>();
+    private static final it.unimi.dsi.fastutil.objects.Object2LongMap<java.net.InetAddress> throttleTracker = new it.unimi.dsi.fastutil.objects.Object2LongOpenHashMap<>(); // Canvas - optimized collection
     private static int throttleCounter = 0;
     // Paper end - Connection throttle
     private static final boolean BYPASS_HOSTCHECK = Boolean.getBoolean("Paper.bypassHostCheck"); // Paper
@@ -80,7 +_,7 @@
                 java.net.InetAddress address = socketAddress.getAddress();
 
                 synchronized (ServerHandshakePacketListenerImpl.throttleTracker) {
-                    if (ServerHandshakePacketListenerImpl.throttleTracker.containsKey(address) && currentTime - ServerHandshakePacketListenerImpl.throttleTracker.get(address) < connectionThrottle) {
+                    if (!Config.INSTANCE.networking.disableConnectionThrottle && ServerHandshakePacketListenerImpl.throttleTracker.containsKey(address) && currentTime - ServerHandshakePacketListenerImpl.throttleTracker.getLong(address) < connectionThrottle) { // Canvas - allow disabling connection throttle - optimized collection
                         ServerHandshakePacketListenerImpl.throttleTracker.put(address, currentTime);
                         Component chatmessage = io.papermc.paper.adventure.PaperAdventure.asVanilla(io.papermc.paper.configuration.GlobalConfiguration.get().messages.kick.connectionThrottle);
                         this.connection.send(new ClientboundLoginDisconnectPacket(chatmessage));
