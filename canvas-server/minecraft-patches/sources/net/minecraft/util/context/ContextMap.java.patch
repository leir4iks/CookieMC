--- a/net/minecraft/util/context/ContextMap.java
+++ b/net/minecraft/util/context/ContextMap.java
@@ -72,17 +_,41 @@
         }
 
         public ContextMap create(ContextKeySet contextKeySet) {
-            Set<ContextKey<?>> set = Sets.difference(this.params.keySet(), contextKeySet.allowed());
-            if (!set.isEmpty()) {
-                throw new IllegalArgumentException("Parameters not allowed in this parameter set: " + set);
-            } else {
-                Set<ContextKey<?>> set1 = Sets.difference(contextKeySet.required(), this.params.keySet());
-                if (!set1.isEmpty()) {
-                    throw new IllegalArgumentException("Missing required parameters: " + set1);
-                } else {
-                    return new ContextMap(this.params);
-                }
-            }
+            // Canvas start - Optimize ContextMap.create
+            Set<ContextKey<?>> allowed = contextKeySet.allowed();
+            Set<ContextKey<?>> invalid = null;
+
+            // Check for any parameters that are not allowed
+            for (ContextKey<?> key : this.params.keySet()) {
+                if (!allowed.contains(key)) {
+                    if (invalid == null) {
+                        invalid = new java.util.HashSet<>();
+                    }
+                    invalid.add(key);
+                }
+            }
+            if (invalid != null) {
+                throw new IllegalArgumentException("Parameters not allowed in this parameter set: " + invalid);
+            }
+
+            Set<ContextKey<?>> required = contextKeySet.required();
+            Set<ContextKey<?>> missing = null;
+
+            // Check for any required parameters that are missing
+            for (ContextKey<?> reqKey : required) {
+                if (!this.params.containsKey(reqKey)) {
+                    if (missing == null) {
+                        missing = new java.util.HashSet<>();
+                    }
+                    missing.add(reqKey);
+                }
+            }
+            if (missing != null) {
+                throw new IllegalArgumentException("Missing required parameters: " + missing);
+            }
+
+            return new ContextMap(this.params);
+            // Canvas end - Optimize ContextMap.create
         }
     }
 }
