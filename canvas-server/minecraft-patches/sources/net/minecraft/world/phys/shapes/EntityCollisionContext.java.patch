--- a/net/minecraft/world/phys/shapes/EntityCollisionContext.java
+++ b/net/minecraft/world/phys/shapes/EntityCollisionContext.java
@@ -19,27 +_,39 @@
             return canAscend;
         }
     };
+    // Canvas start - make EntityCollisionContext a live representation - remove these and pray no plugin uses them
+    /*
     private final boolean descending;
     private final double entityBottom;
     private final boolean placement;
     private final ItemStack heldItem;
     private final Predicate<FluidState> canStandOnFluid;
+    */
+    // Canvas start - make EntityCollisionContext a live representation - remove these and pray no plugin uses them
+    private final boolean placement;
     @Nullable
     private final Entity entity;
 
     protected EntityCollisionContext(
         boolean descending, boolean placement, double entityBottom, ItemStack heldItem, Predicate<FluidState> canStandOnFluid, @Nullable Entity entity
     ) {
+        // Canvas start - make EntityCollisionContext a live representation - remove these and pray no plugin uses them
+        /*
         this.descending = descending;
         this.placement = placement;
         this.entityBottom = entityBottom;
         this.heldItem = heldItem;
         this.canStandOnFluid = canStandOnFluid;
+        */
+        // Canvas start - make EntityCollisionContext a live representation - remove these and pray no plugin uses them
+        this.placement = placement;
         this.entity = entity;
     }
 
     @Deprecated
     protected EntityCollisionContext(Entity entity, boolean canStandOnFluid, boolean placement) {
+        // Canvas start - make EntityCollisionContext a live representation - remove unneeded things
+        /*
         this(
             entity.isDescending(),
             placement,
@@ -50,16 +_,20 @@
                 : (entity instanceof LivingEntity livingEntity ? fluidState -> livingEntity.canStandOnFluid(fluidState) : fluidState -> false),
             entity
         );
+        */
+        this.placement = placement;
+        this.entity = entity;
+        // Canvas start - make EntityCollisionContext a live representation - remove unneeded things
     }
 
     @Override
     public boolean isHoldingItem(Item item) {
-        return this.heldItem.is(item);
+        return this.entity instanceof LivingEntity livingEntity ? livingEntity.getMainHandItem().is(item) : ItemStack.EMPTY.is(item); // Canvas - make EntityCollisionContext a live representation
     }
 
     @Override
     public boolean canStandOnFluid(FluidState fluid1, FluidState fluid2) {
-        return this.canStandOnFluid.test(fluid2) && !fluid1.getType().isSame(fluid2.getType());
+        return this.entity instanceof LivingEntity livingEntity && livingEntity.canStandOnFluid(fluid2) && !fluid1.getType().isSame(fluid2.getType()); // Canvas - make EntityCollisionContext a live representation
     }
 
     @Override
@@ -69,12 +_,12 @@
 
     @Override
     public boolean isDescending() {
-        return this.descending;
+        return this.entity != null && this.entity.isDescending(); // Canvas - make EntityCollisionContext a live representation
     }
 
     @Override
     public boolean isAbove(VoxelShape shape, BlockPos pos, boolean canAscend) {
-        return this.entityBottom > pos.getY() + shape.max(Direction.Axis.Y) - 1.0E-5F;
+        return (this.entity == null ? -Double.MAX_VALUE : entity.getY()) > (double) pos.getY() + shape.max(Direction.Axis.Y) - (double) 1.0E-5F; // Canvas - make EntityCollisionContext a live representation
     }
 
     @Nullable
