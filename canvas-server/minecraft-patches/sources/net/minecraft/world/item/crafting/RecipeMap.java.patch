--- a/net/minecraft/world/item/crafting/RecipeMap.java
+++ b/net/minecraft/world/item/crafting/RecipeMap.java
@@ -75,4 +_,24 @@
     public <I extends RecipeInput, T extends Recipe<I>> Stream<RecipeHolder<T>> getRecipesFor(RecipeType<T> type, I input, Level level) {
         return input.isEmpty() ? Stream.empty() : this.byType(type).stream().filter(recipeHolder -> recipeHolder.value().matches(input, level));
     }
+
+    // Canvas start - Use optimized RecipeManager - Remove streams to be faster
+    public <I extends RecipeInput, T extends Recipe<I>> java.util.List<RecipeHolder<T>> getRecipesForList(RecipeType<T> type, I input, Level level) {
+        java.util.List<RecipeHolder<T>> list;
+
+        if (input.isEmpty()) {
+            return java.util.List.of();
+        } else {
+            list = new java.util.ArrayList<>();
+        }
+
+        for (RecipeHolder<T> recipeHolder : this.byType(type)) {
+            if (recipeHolder.value().matches(input, level)) {
+                list.add(recipeHolder);
+            }
+        }
+
+        return list;
+    }
+    // Canvas end - Use optimized RecipeManager - Remove streams to be faster
 }
