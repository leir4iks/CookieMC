--- a/net/minecraft/world/entity/monster/hoglin/Hoglin.java
+++ b/net/minecraft/world/entity/monster/hoglin/Hoglin.java
@@ -16,8 +_,6 @@
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.tags.ItemTags;
 import net.minecraft.util.RandomSource;
-import net.minecraft.util.profiling.Profiler;
-import net.minecraft.util.profiling.ProfilerFiller;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
@@ -205,13 +_,11 @@
         return (Brain<Hoglin>)super.getBrain();
     }
 
+    private int behaviorTick; // Canvas
     @Override
     protected void customServerAiStep(ServerLevel level) {
-        ProfilerFiller profilerFiller = Profiler.get();
-        profilerFiller.push("hoglinBrain");
-        //if ((getRider() == null || !this.isControllable()) && this.behaviorTick++ % this.activatedPriority == 0) // Pufferfish // Purpur - only use brain if no rider
+        if ((getRider() == null || !this.isControllable()) && this.behaviorTick++ % this.activatedPriority == 0) // Pufferfish // Purpur - only use brain if no rider // Canvas - DAB
         this.getBrain().tick(level, this);
-        profilerFiller.pop();
         HoglinAi.updateActivity(this);
         if (this.isConverting()) {
             this.timeInOverworld++;
