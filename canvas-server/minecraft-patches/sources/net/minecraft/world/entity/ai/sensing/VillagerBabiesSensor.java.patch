--- a/net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor.java
+++ b/net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor.java
@@ -22,7 +_,21 @@
     }
 
     private List<LivingEntity> getNearestVillagerBabies(LivingEntity livingEntity) {
-        return ImmutableList.copyOf(this.getVisibleEntities(livingEntity).findAll(this::isVillagerBaby));
+        // Canvas start - optimize baby villager sensor
+        NearestVisibleLivingEntities visibleEntities = this.getVisibleEntities(livingEntity);
+        ImmutableList.Builder<LivingEntity> babies = ImmutableList.builder();
+
+        // Inline and use single loop - copy from NearestVisibleLivingEntities#findAll and isVillagerBaby
+        for (LivingEntity target : visibleEntities.nearbyEntities) {
+            if (target.getType() == EntityType.VILLAGER
+                && target.isBaby()
+                && visibleEntities.lineOfSightTest.test(target)) {
+                babies.add(target);
+            }
+        }
+
+        return babies.build();
+        // Canvas end
     }
 
     private boolean isVillagerBaby(LivingEntity livingEntity) {
