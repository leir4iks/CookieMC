--- a/net/minecraft/world/entity/animal/axolotl/Axolotl.java
+++ b/net/minecraft/world/entity/animal/axolotl/Axolotl.java
@@ -31,8 +_,6 @@
 import net.minecraft.util.Mth;
 import net.minecraft.util.RandomSource;
 import net.minecraft.util.StringRepresentable;
-import net.minecraft.util.profiling.Profiler;
-import net.minecraft.util.profiling.ProfilerFiller;
 import net.minecraft.world.DifficultyInstance;
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
@@ -371,16 +_,12 @@
         return true;
     }
 
+    private int behaviorTick = 0; // Canvas
     @Override
     protected void customServerAiStep(ServerLevel level) {
-        ProfilerFiller profilerFiller = Profiler.get();
-        profilerFiller.push("axolotlBrain");
-        //if ((getRider() == null || !this.isControllable()) && this.behaviorTick++ % this.activatedPriority == 0) // Pufferfish // Purpur - only use brain if no rider
+        if ((getRider() == null || !this.isControllable()) && this.behaviorTick++ % this.activatedPriority == 0) // Pufferfish // Purpur - only use brain if no rider // Canvas - DAB
         this.getBrain().tick(level, this);
-        profilerFiller.pop();
-        profilerFiller.push("axolotlActivityUpdate");
         AxolotlAi.updateActivity(this);
-        profilerFiller.pop();
         if (!this.isNoAi()) {
             Optional<Integer> memory = this.getBrain().getMemory(MemoryModuleType.PLAY_DEAD_TICKS);
             this.setPlayingDead(memory.isPresent() && memory.get() > 0);
