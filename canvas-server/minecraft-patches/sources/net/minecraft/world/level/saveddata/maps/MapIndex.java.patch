--- a/net/minecraft/world/level/saveddata/maps/MapIndex.java
+++ b/net/minecraft/world/level/saveddata/maps/MapIndex.java
@@ -9,21 +_,21 @@
 public class MapIndex extends SavedData {
     private static final int NO_MAP_ID = -1;
     public static final Codec<MapIndex> CODEC = RecordCodecBuilder.create(
-        instance -> instance.group(Codec.INT.optionalFieldOf("map", -1).forGetter(mapIndex -> mapIndex.lastMapId)).apply(instance, MapIndex::new)
+        instance -> instance.group(Codec.INT.optionalFieldOf("map", -1).forGetter(mapIndex -> mapIndex.lastMapId.get())).apply(instance, MapIndex::new) // Canvas - make map data thread-safe
     );
     public static final SavedDataType<MapIndex> TYPE = new SavedDataType<>("idcounts", MapIndex::new, CODEC, DataFixTypes.SAVED_DATA_MAP_INDEX);
-    private int lastMapId;
+    private final java.util.concurrent.atomic.AtomicInteger lastMapId = new java.util.concurrent.atomic.AtomicInteger(); // Canvas - make map data thread-safe
 
     public MapIndex() {
         this(-1);
     }
 
     public MapIndex(int lastMapId) {
-        this.lastMapId = lastMapId;
+        this.lastMapId.set(lastMapId); // Canvas - make map data thread-safe
     }
 
     public MapId getNextMapId() {
-        MapId mapId = new MapId(++this.lastMapId);
+        MapId mapId = new MapId(this.lastMapId.incrementAndGet()); // Canvas - make map data thread-safe
         this.setDirty();
         return mapId;
     }
