--- a/net/minecraft/server/packs/resources/SimplePreparableReloadListener.java
+++ b/net/minecraft/server/packs/resources/SimplePreparableReloadListener.java
@@ -2,7 +_,6 @@
 
 import java.util.concurrent.CompletableFuture;
 import java.util.concurrent.Executor;
-import net.minecraft.util.profiling.Profiler;
 import net.minecraft.util.profiling.ProfilerFiller;
 
 public abstract class SimplePreparableReloadListener<T> implements PreparableReloadListener {
@@ -10,9 +_,9 @@
     public final CompletableFuture<Void> reload(
         PreparableReloadListener.PreparationBarrier barrier, ResourceManager manager, Executor backgroundExecutor, Executor gameExecutor
     ) {
-        return CompletableFuture.<T>supplyAsync(() -> this.prepare(manager, Profiler.get()), backgroundExecutor)
+        return CompletableFuture.<T>supplyAsync(() -> this.prepare(manager, net.minecraft.util.profiling.InactiveProfiler.INSTANCE), backgroundExecutor)
             .thenCompose(barrier::wait)
-            .thenAcceptAsync(object -> this.apply((T)object, manager, Profiler.get()), gameExecutor);
+            .thenAcceptAsync(object -> this.apply((T)object, manager, net.minecraft.util.profiling.InactiveProfiler.INSTANCE), gameExecutor);
     }
 
     protected abstract T prepare(ResourceManager resourceManager, ProfilerFiller profiler);
