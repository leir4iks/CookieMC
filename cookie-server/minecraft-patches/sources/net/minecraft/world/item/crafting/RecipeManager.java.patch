--- a/net/minecraft/world/item/crafting/RecipeManager.java
+++ b/net/minecraft/world/item/crafting/RecipeManager.java
@@ -167,7 +_,7 @@
 
     public <I extends RecipeInput, T extends Recipe<I>> Optional<RecipeHolder<T>> getRecipeFor(RecipeType<T> recipeType, I input, Level level) {
         // CraftBukkit start
-        List<RecipeHolder<T>> list = this.recipes.getRecipesFor(recipeType, input, level).toList();
+        List<RecipeHolder<T>> list = this.recipes.getRecipesForList(recipeType, input, level); // cookie - Use optimized RecipeManager - Remove streams to be faster
         return (list.isEmpty()) ? Optional.empty() : Optional.of(list.getLast()); // CraftBukkit - SPIGOT-4638: last recipe gets priority
         // CraftBukkit end
     }
