--- a/net/minecraft/world/level/redstone/CollectingNeighborUpdater.java
+++ b/net/minecraft/world/level/redstone/CollectingNeighborUpdater.java
@@ -121,7 +_,7 @@
         public boolean runNext(Level level) {
             Direction direction = NeighborUpdater.UPDATE_ORDER[this.idx++];
             BlockPos blockPos = this.sourcePos.relative(direction);
-            BlockState blockState = level.getBlockState(blockPos);
+            BlockState blockState = !ca.spottedleaf.moonrise.common.util.TickThread.isTickThreadFor(level, blockPos) ? null : level.getBlockState(blockPos); if (blockState != null) { // cookie - block updates in unloaded chunks
             Orientation orientation = null;
             if (level.enabledFeatures().contains(FeatureFlags.REDSTONE_EXPERIMENTS)) {
                 if (this.orientation == null) {
@@ -134,6 +_,7 @@
             }
 
             NeighborUpdater.executeUpdate(level, blockState, blockPos, this.sourceBlock, orientation, false, this.sourcePos); // Paper - Add source block to BlockPhysicsEvent
+            } // cookie - block updates in unloaded chunks
             if (this.idx < NeighborUpdater.UPDATE_ORDER.length && NeighborUpdater.UPDATE_ORDER[this.idx] == this.skipDirection) {
                 this.idx++;
             }
@@ -150,7 +_,9 @@
         implements CollectingNeighborUpdater.NeighborUpdates {
         @Override
         public boolean runNext(Level level) {
+            if (ca.spottedleaf.moonrise.common.util.TickThread.isTickThreadFor(level, this.pos) && level.getChunkIfLoaded(this.pos) != null) { // cookie - block updates in unloaded chunks
             NeighborUpdater.executeShapeUpdate(level, this.direction, this.pos, this.neighborPos, this.neighborState, this.updateFlags, this.updateLimit);
+            } // cookie - block updates in unloaded chunks
             return false;
         }
     }
@@ -158,8 +_,9 @@
     record SimpleNeighborUpdate(BlockPos pos, Block block, @Nullable Orientation orientation) implements CollectingNeighborUpdater.NeighborUpdates {
         @Override
         public boolean runNext(Level level) {
-            BlockState blockState = level.getBlockState(this.pos);
+            BlockState blockState = !ca.spottedleaf.moonrise.common.util.TickThread.isTickThreadFor(level, this.pos) ? null : level.getBlockStateIfLoaded(this.pos); if (blockState != null) { // cookie - block updates in unloaded chunks
             NeighborUpdater.executeUpdate(level, blockState, this.pos, this.block, this.orientation, false);
+            } // cookie - block updates in unloaded chunks
             return false;
         }
     }
