--- a/net/minecraft/world/level/block/TntBlock.java
+++ b/net/minecraft/world/level/block/TntBlock.java
@@ -2,6 +_,9 @@
 
 import com.mojang.serialization.MapCodec;
 import javax.annotation.Nullable;
+import io.cookiemc.cookie.Config;
+import io.cookiemc.cookie.entity.tnt.TNTMergeManager;
+import io.cookiemc.cookie.region.ServerRegions;
 import net.minecraft.core.BlockPos;
 import net.minecraft.network.chat.Component;
 import net.minecraft.server.level.ServerLevel;
@@ -11,6 +_,7 @@
 import net.minecraft.world.InteractionHand;
 import net.minecraft.world.InteractionResult;
 import net.minecraft.world.entity.Entity;
+import net.minecraft.world.entity.EntityType;
 import net.minecraft.world.entity.LivingEntity;
 import net.minecraft.world.entity.item.PrimedTnt;
 import net.minecraft.world.entity.player.Player;
@@ -28,7 +_,11 @@
 import net.minecraft.world.level.block.state.properties.BooleanProperty;
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.level.redstone.Orientation;
+import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.BlockHitResult;
+import net.minecraft.world.phys.Vec3;
+import java.util.List;
+import java.util.concurrent.atomic.AtomicInteger;
 
 public class TntBlock extends Block {
     public static final MapCodec<TntBlock> CODEC = simpleCodec(TntBlock::new);
@@ -71,6 +_,17 @@
 
     @Override
     public void wasExploded(ServerLevel level, BlockPos pos, Explosion explosion) {
+        // cookie start - merge tnt logic
+        if (Config.INSTANCE.blocks.tnt.mergeTntLogic) {
+            if (ServerRegions.getTickData(level).tntCount.get() >= Config.INSTANCE.blocks.tnt.maxTntPrimedForMerge) {
+                PrimedTnt nearestEntity = getNearestTNTEntity(level, pos.getCenter(), 5);
+                if (nearestEntity != null) {
+                    nearestEntity.addPower();
+                }
+                return;
+            }
+        }
+        // cookie end
         if (level.getGameRules().getBoolean(GameRules.RULE_TNT_EXPLODES)) {
             PrimedTnt primedTnt = new PrimedTnt(level, pos.getX() + 0.5, pos.getY(), pos.getZ() + 0.5, explosion.getIndirectSourceEntity());
             int fuse = primedTnt.getFuse();
@@ -79,6 +_,26 @@
         }
     }
 
+    // cookie start - merge tnt logic
+    public @org.jetbrains.annotations.Nullable PrimedTnt getNearestTNTEntity(ServerLevel world, Vec3 position, double radius) {
+        AABB searchBox = new AABB(position.subtract(radius, radius, radius), position.add(radius, radius, radius));
+        List<PrimedTnt> tntEntities = world.getEntities(EntityType.TNT, searchBox, entity -> entity.getBlockState().getBlock() == Blocks.TNT);
+
+        PrimedTnt nearestTNT = null;
+        double closestDistance = Double.MAX_VALUE;
+
+        for (PrimedTnt tntEntity : tntEntities) {
+            double distance = tntEntity.distanceToSqr(position);
+            if (distance < closestDistance) {
+                closestDistance = distance;
+                nearestTNT = tntEntity;
+            }
+        }
+
+        return nearestTNT;
+    }
+
+    // cookie end
     public static boolean prime(Level level, BlockPos pos) {
     // Paper start
         return prime(level, pos, null, () -> true);
