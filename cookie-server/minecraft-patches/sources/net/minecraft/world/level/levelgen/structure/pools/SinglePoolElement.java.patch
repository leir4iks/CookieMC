--- a/net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement.java
+++ b/net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement.java
@@ -12,6 +_,8 @@
 import java.util.List;
 import java.util.Optional;
 import java.util.function.Function;
+import io.cookiemc.cookie.Config;
+import io.cookiemc.cookie.util.structure.GeneralUtils;
 import net.minecraft.Util;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Holder;
@@ -119,8 +_,15 @@
         StructureTemplateManager structureTemplateManager, BlockPos pos, Rotation rotation, RandomSource random
     ) {
         List<StructureTemplate.JigsawBlockInfo> jigsaws = this.getTemplate(structureTemplateManager).getJigsaws(pos, rotation);
+        // cookie start - StructureLayoutOptimizer
+        if (Config.INSTANCE.chunks.generation.enableStructureLayoutOptimizer) {
+            structureLayoutOptimizer$fasterJigsawListShuffling1(jigsaws, random);
+            structureLayoutOptimizer$fasterJigsawListShuffling2(jigsaws);
+        } else {
         Util.shuffle(jigsaws, random);
         sortBySelectionPriority(jigsaws);
+        }
+        // cookie end
         return jigsaws;
     }
 
@@ -192,6 +_,14 @@
         return "Single[" + this.template + "]";
     }
 
+    // cookie start - StructureLayoutOptimizer
+    private void structureLayoutOptimizer$fasterJigsawListShuffling1(List<StructureTemplate.JigsawBlockInfo> list, RandomSource randomSource) {
+        GeneralUtils.shuffleAndPrioritize(list, randomSource);
+    }
+
+    private void structureLayoutOptimizer$fasterJigsawListShuffling2(List<StructureTemplate.JigsawBlockInfo> structureBlockInfos) {}
+
+    // cookie end
     @VisibleForTesting
     public ResourceLocation getTemplateLocation() {
         return this.template.orThrow();
