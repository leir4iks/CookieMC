--- a/ca/spottedleaf/moonrise/patches/chunk_system/level/entity/server/ServerEntityLookup.java
+++ b/ca/spottedleaf/moonrise/patches/chunk_system/level/entity/server/ServerEntityLookup.java
@@ -7,6 +_,7 @@
 import ca.spottedleaf.moonrise.patches.chunk_system.level.ChunkSystemServerLevel;
 import ca.spottedleaf.moonrise.patches.chunk_system.level.entity.ChunkEntitySlices;
 import ca.spottedleaf.moonrise.patches.chunk_system.level.entity.EntityLookup;
+import io.cookiemc.cookie.region.ServerRegions;
 import net.minecraft.server.level.ServerLevel;
 import net.minecraft.server.level.ServerPlayer;
 import net.minecraft.world.entity.Entity;
@@ -61,7 +_,7 @@
                                                final int oldSectionX, final int oldSectionY, final int oldSectionZ,
                                                final int newSectionX, final int newSectionY, final int newSectionZ) {
         if (entity instanceof ServerPlayer player) {
-            ((ChunkSystemServerLevel)this.serverWorld).moonrise$getNearbyPlayers().tickPlayer(player);
+            (this.serverWorld).moonrise$getNearbyPlayers(entity.chunkPosition()).tickPlayer(player); // cookie - Threaded Regions
         }
         PlatformHooks.get().entityMove(
             entity,
@@ -73,28 +_,29 @@
     @Override
     protected void addEntityCallback(final Entity entity) {
         if (entity instanceof ServerPlayer player) {
-            ((ChunkSystemServerLevel)this.serverWorld).moonrise$getNearbyPlayers().addPlayer(player);
+            // ((ChunkSystemServerLevel)this.serverWorld).moonrise$getNearbyPlayers().addPlayer(player); // cookie - Threaded Regions
         }
+        ServerRegions.getTickData(this.world.level()).addEntity(entity); // cookie - Threaded Regions
     }
 
     @Override
     protected void removeEntityCallback(final Entity entity) {
         if (entity instanceof ServerPlayer player) {
-            ((ChunkSystemServerLevel)this.serverWorld).moonrise$getNearbyPlayers().removePlayer(player);
+            (this.serverWorld).moonrise$getNearbyPlayers(entity.chunkPosition()).removePlayer(player); // cookie - Threaded Regions
         }
     }
 
     @Override
     protected void entityStartLoaded(final Entity entity) {
         // Moonrise start - entity tracker
-        this.trackerEntities.add(entity);
+        ServerRegions.getRegionizedTickData(entity.chunkPosition().x, entity.chunkPosition().z, this.serverWorld).getTrackerEntities(entity.chunkPosition()).add(entity); // cookie - Threaded Regions
         // Moonrise end - entity tracker
     }
 
     @Override
     protected void entityEndLoaded(final Entity entity) {
         // Moonrise start - entity tracker
-        this.trackerEntities.remove(entity);
+        ServerRegions.getRegionizedTickData(entity.chunkPosition().x, entity.chunkPosition().z, this.serverWorld).getTrackerEntities(entity.chunkPosition()).remove(entity); // cookie - Threaded Regions
         // Moonrise end - entity tracker
     }
 
