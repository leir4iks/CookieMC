--- a/purpur-server/build.gradle.kts
+++ b/purpur-server/build.gradle.kts
@@ -16,7 +_,7 @@
 
 dependencies {
     mache("io.papermc:mache:1.21.5+build.2")
-    paperclip("io.papermc:paperclip:3.0.3")
+    paperclip("io.cookiemc:clipboard:4.0.2-SNAPSHOT") // cookie - build changes
     testRuntimeOnly("org.junit.platform:junit-platform-launcher")
 }
 
@@ -30,6 +_,7 @@
 
     // Purpur start - Rebrand
     val purpur = forks.register("purpur") {
+        rootDirectory = upstreamsDirectory().map { it.dir("purpur") } // cookie - build changes
         upstream.patchDir("paperServer") {
             upstreamPath = "paper-server"
             excludes = setOf("src/minecraft", "patches", "build.gradle.kts")
@@ -37,7 +_,25 @@
             outputDir = rootDirectory.dir("paper-server")
         }
     }
-    activeFork = purpur
+    // cookie start - build changes
+
+    val cookie = forks.register("cookie") {
+        forks = purpur
+        upstream.patchRepo("paperServer") {
+            upstreamRepo = purpur.patchedRepo("paperServer")
+            patchesDir = rootDirectory.dir("cookie-server/paper-patches")
+            outputDir = rootDirectory.dir("paper-server")
+        }
+        upstream.patchDir("purpurServer") {
+            upstreamPath = "purpur-server"
+            excludes = setOf("src/minecraft", "paper-patches", "minecraft-patches", "build.gradle.kts", "build.gradle.kts.patch")
+            patchesDir = rootDirectory.dir("cookie-server/purpur-patches")
+            outputDir = rootDirectory.dir("purpur-server")
+        }
+    }
+
+    activeFork = cookie
+    // cookie end
     // Purpur end - Rebrand
 
     spigot {
@@ -74,7 +_,7 @@
 }
 val services = objects.newInstance<Services>()
 
-if (project.providers.gradleProperty("publishDevBundle").isPresent) {
+if (true) { // cookie - build changes
     val devBundleComponent = services.softwareComponentFactory.adhoc("devBundle")
     components.add(devBundleComponent)
 
@@ -113,10 +_,50 @@
     }
 
     publishing {
-        publications.create<MavenPublication>("devBundle") {
-            artifactId = "dev-bundle"
-            from(devBundleComponent)
-        }
+        // cookie start - build changes
+        repositories {
+            maven {
+                name = "central"
+                url = uri("https://central.sonatype.com/repository/maven-snapshots/")
+                credentials {
+                    username = System.getenv("PUBLISH_USER")
+                    password = System.getenv("PUBLISH_TOKEN")
+                }
+            }
+        }
+        publications {
+            publications.create<MavenPublication>("devBundle") {
+                artifactId = "dev-bundle"
+                from(devBundleComponent)
+                afterEvaluate {
+                    pom {
+                        name.set("dev-bundle")
+                        description.set("cookiemc userdev bundle")
+                        url.set("https://github.com/Craftcookiemc/cookie")
+                        licenses {
+                            license {
+                                name.set("GNU Affero General Public License v3.0")
+                                url.set("https://github.com/Craftcookiemc/cookie/blob/master/LICENSE")
+                                distribution.set("repo")
+                            }
+                        }
+                        developers {
+                            developer {
+                                id.set("cookie-team")
+                                name.set("cookie Team")
+                                organization.set("cookiemc")
+                                organizationUrl.set("https://cookiemc.io")
+                                roles.add("developer")
+                            }
+                        }
+                        scm {
+                            url.set("https://github.com/Craftcookiemc/cookie")
+                        }
+                    }
+                }
+            }
+        }
+        // cookie end - build changes
     }
 }
 
@@ -125,10 +_,14 @@
     main {
         java { srcDir("../paper-server/src/main/java") }
         resources { srcDir("../paper-server/src/main/resources") }
+        java { srcDir("../purpur-server/src/main/java") } // cookie - build changes
+        resources { srcDir("../purpur-server/src/main/resources") } // cookie - build changes
     }
     test {
         java { srcDir("../paper-server/src/test/java") }
         resources { srcDir("../paper-server/src/test/resources") }
+        java { srcDir("../purpur-server/src/test/java") } // cookie - build changes
+        resources { srcDir("../purpur-server/src/test/resources") } // cookie - build changes
     }
 }
 val log4jPlugins = sourceSets.create("log4jPlugins") {
@@ -156,10 +_,14 @@
 }
 
 dependencies {
-    implementation(project(":purpur-api")) // Purpur
+    // cookie start - build changes
+    implementation(project(":cookie-api"))
+    implementation("com.github.ben-manes.caffeine:caffeine:3.2.0")
+    implementation("org.agrona:agrona:2.0.1")
+    // cookie - build changes
     implementation("ca.spottedleaf:concurrentutil:0.0.3")
-    implementation("org.jline:jline-terminal-ffm:3.27.1") // use ffm on java 22+
-    implementation("org.jline:jline-terminal-jni:3.27.1") // fall back to jni on java 21
+    implementation("org.jline:jline-terminal-ffm:3.29.0") // use ffm on java 22+
+    implementation("org.jline:jline-terminal-jni:3.29.0") // fall back to jni on java 21
     implementation("net.minecrell:terminalconsoleappender:1.3.0")
     implementation("net.kyori:adventure-text-serializer-ansi:4.21.0") // Keep in sync with adventureVersion from Paper-API build file
     runtimeConfiguration(sourceSets.main.map { it.runtimeClasspath })
@@ -170,16 +_,16 @@
       all its classes to check if they are plugins.
       Scanning takes about 1-2 seconds so adding this speeds up the server start.
      */
-    implementation("org.apache.logging.log4j:log4j-core:2.24.1")
-    log4jPlugins.annotationProcessorConfigurationName("org.apache.logging.log4j:log4j-core:2.24.1") // Needed to generate meta for our Log4j plugins
+    implementation("org.apache.logging.log4j:log4j-core:2.24.3")
+    log4jPlugins.annotationProcessorConfigurationName("org.apache.logging.log4j:log4j-core:2.24.3") // Needed to generate meta for our Log4j plugins
     runtimeOnly(log4jPlugins.output)
     alsoShade(log4jPlugins.output)
 
     implementation("com.velocitypowered:velocity-native:3.4.0-SNAPSHOT") {
         isTransitive = false
     }
-    implementation("io.netty:netty-codec-haproxy:4.1.118.Final") // Add support for proxy protocol
-    implementation("org.apache.logging.log4j:log4j-iostreams:2.24.1")
+    implementation("io.netty:netty-codec-haproxy:4.1.119.Final") // Add support for proxy protocol
+    implementation("org.apache.logging.log4j:log4j-iostreams:2.24.3")
     implementation("org.ow2.asm:asm-commons:9.8")
     implementation("org.spongepowered:configurate-yaml:4.2.0-20250225.064233-199")
     implementation("org.spongepowered:configurate-core:4.2.0-20250225.064233-204") // Pinned dependency of above pinned yaml snapshot.
@@ -191,22 +_,25 @@
     // Deps that were previously in the API but have now been moved here for backwards compat, eventually to be removed
     runtimeOnly("commons-lang:commons-lang:2.6")
     runtimeOnly("org.xerial:sqlite-jdbc:3.49.1.0")
-    runtimeOnly("com.mysql:mysql-connector-j:9.2.0")
+    runtimeOnly("com.mysql:mysql-connector-j:9.2.0") {
+        exclude("com.google.protobuf", "protobuf-java")
+    }
+    runtimeOnly("com.google.protobuf:protobuf-java:4.30.1")
     runtimeOnly("com.lmax:disruptor:3.4.4")
     implementation("com.googlecode.json-simple:json-simple:1.1.1") { // change to runtimeOnly once Timings is removed
         isTransitive = false // includes junit
     }
 
-    runtimeOnly("org.apache.maven:maven-resolver-provider:3.9.6")
-    runtimeOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.9.18")
-    runtimeOnly("org.apache.maven.resolver:maven-resolver-transport-http:1.9.18")
+    runtimeOnly("org.apache.maven:maven-resolver-provider:3.9.9")
+    runtimeOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.9.23")
+    runtimeOnly("org.apache.maven.resolver:maven-resolver-transport-http:1.9.23")
 
     testImplementation("io.github.classgraph:classgraph:4.8.179") // For mob goal test
     testImplementation("org.junit.jupiter:junit-jupiter:5.12.2")
     testImplementation("org.junit.platform:junit-platform-suite-engine:1.12.2")
     testImplementation("org.hamcrest:hamcrest:2.2")
     testImplementation("org.mockito:mockito-core:5.14.1")
-    mockitoAgent("org.mockito:mockito-core:5.14.1") { isTransitive = false } // Configure mockito agent that is needed in newer java versions
+    mockitoAgent("org.mockito:mockito-core:5.16.1") { isTransitive = false } // Configure mockito agent that is needed in newer java versions
     testImplementation("org.ow2.asm:asm-tree:9.8")
     testImplementation("org.junit-pioneer:junit-pioneer:2.2.0") // CartesianTest
 
@@ -235,19 +_,20 @@
         val date = git.exec(providers, "show", "-s", "--format=%ci", gitHash).get().trim()
         val gitBranch = git.exec(providers, "rev-parse", "--abbrev-ref", "HEAD").get().trim()
         attributes(
-            "Main-Class" to "org.bukkit.craftbukkit.Main",
-            "Implementation-Title" to "Purpur", // Purpur
+            "Main-Class" to "net.minecraft.server.Main", // cookie - build changes
+            "Implementation-Title" to "cookie", // Purpur // cookie - build changes
             "Implementation-Version" to implementationVersion,
             "Implementation-Vendor" to date,
-            "Specification-Title" to "Purpur", // Purpur
+            "Specification-Title" to "cookie", // Purpur // cookie - build changes
             "Specification-Version" to project.version,
-            "Specification-Vendor" to "Purpur Team", // Purpur
-            "Brand-Id" to "purpurmc:purpur", // Purpur
-            "Brand-Name" to "Purpur", // Purpur
+            "Specification-Vendor" to "cookie Team", // Purpur // cookie - build changes
+            "Brand-Id" to "cookiemc:cookie", // Purpur // cookie - build changes
+            "Brand-Name" to "cookie", // Purpur // cookie - build changes
             "Build-Number" to (build ?: ""),
             "Build-Time" to buildTime.toString(),
             "Git-Branch" to gitBranch,
             "Git-Commit" to gitHash,
+            "Experimental" to false, // cookie - build changes
         )
         for (tld in setOf("net", "com", "org")) {
             attributes("$tld/bukkit", "Sealed" to true)
