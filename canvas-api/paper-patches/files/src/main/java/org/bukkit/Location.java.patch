--- a/src/main/java/org/bukkit/Location.java
+++ b/src/main/java/org/bukkit/Location.java
@@ -6,7 +6,8 @@
 import java.util.Collection;
 import java.util.HashMap;
 import java.util.Map;
-import java.util.concurrent.atomic.AtomicReference;
+import java.lang.ref.Reference;
+import java.lang.ref.WeakReference;
 import java.util.function.Predicate;
 import io.papermc.paper.math.FinePosition;
 import io.papermc.paper.math.Rotation;
@@ -29,15 +30,15 @@
  * representation by the implementation.
  */
 public class Location implements Cloneable, ConfigurationSerializable, io.papermc.paper.math.FinePosition {
-    private Reference<World> world;
-    private double x;
-    private double y;
-    private double z;
-    private float pitch;
-    private float yaw;
-
+    // we use volatile for thread-safety and WeakReference to prevent memory leaks
+    private volatile Reference<World> world; // Canvas
+    // Canvas start - volatile
+    private volatile double x;
+    private volatile double y;
+    private volatile double z;
+    private volatile float pitch;
+    private volatile float yaw;
+    // Canvas end
     /**
      * Constructs a new Location with the given coordinates
      *
